name: build-publish-check

on:
  push: 
    branches:
      - main
  pull_request:
    branches:
      - main

permissions:
  id-token: write
  contents: read
  attestations: write
  packages: write

env:
  REGISTRY: docker.cloudsmith.io
  IMAGE_NAME: demo/gh-actions/flask_app 
  CLOUDSMITH_REPO_NAME: gh-actions/flask-app 
  CLOUDSMITH_SERVICE: gh-actions
  CLOUDSMITH_NAMESPACE: demo

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Step to checkout the code from the repository
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Auth to Cloudsmith with OIDC
        uses: cloudsmith-io/cloudsmith-cli-action@v1.0.2
        with:
          oidc-namespace: ${{ env.CLOUDSMITH_NAMESPACE}}
          oidc-service-slug: ${{ env.CLOUDSMITH_SERVICE }}
          oidc-auth-only: 'true'

      # Step to authenticate with Cloudsmith Docker Registry
      - name: Authenticate with Cloudsmith Docker Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ env.CLOUDSMITH_SERVICE }}
          password: ${{ env.CLOUDSMITH_API_KEY }}

      # Step to build and push the Docker image to Cloudsmith
      - name: Build and push image
        id: push
        uses: docker/build-push-action@v5.0.0
        with:
          context: .
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
          build-args: |
            CLOUDSMITH_REPO_NAME=${{ env.CLOUDSMITH_REPO_NAME }}
            
      # Step to get the image digest
      - name: Get image digest
        id: get-digest
        run: |
          echo "IMAGE_DIGEST=$(docker inspect --format='{{index .RepoDigests 0}}' ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest)" >> $GITHUB_ENV
          echo "Image digest is $IMAGE_DIGEST"

      - name: Get Image slug/identifier
        run: | 
          SLUG=$(curl --request GET \
                --url "https://api.cloudsmith.io/v1/packages/$CLOUDSMITH_NAMESPACE/gh-actions/?query=name%3Adrone-base%20AND%20tag%3Alatest&sort=-date" \
                --header "X-Api-Key:Bearer $CLOUDSMITH_API_KEY" \
                --header 'accept: application/json') | jq '.slug_perm' >> $GITHUB_ENV

          echo "Package identifier is $SLUG"

      - name: Check package status 
        run: | 
          STATUS=$(curl --request GET \
          --url "https://api.cloudsmith.io/v1/packages/demo/gh-actions/${{env.SLUG}}/status/" \
          --header "X-Api-Key:Bearer $CLOUDSMITH_API_KEY" \
          --header 'accept: application/json') | jq '.status_str'

          echo "Packge status is $STATUS"