name: build-publish-check

on:
  push: 
    branches:
      - main
  pull_request:
    branches:
      - main

permissions:
  id-token: write
  contents: read
  attestations: write
  packages: write

env:
  REGISTRY: docker.cloudsmith.io
  IMAGE_NAME: demo/gh-actions/flask_app 
  CLOUDSMITH_REPO_NAME: gh-actions
  CLOUDSMITH_SERVICE: gh-actions
  CLOUDSMITH_NAMESPACE: demo

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4   
  
      - name: Auth to Cloudsmith with OIDC
        uses: cloudsmith-io/cloudsmith-cli-action@v1.0.2
        with:
          oidc-namespace: ${{ env.CLOUDSMITH_NAMESPACE }}
          oidc-service-slug: ${{ env.CLOUDSMITH_SERVICE }}
          oidc-auth-only: 'true'

      - name: Authenticate with Cloudsmith Docker Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ env.CLOUDSMITH_SERVICE }}
          password: ${{ env.CLOUDSMITH_API_KEY }}

      - name: Build and push image
        id: push
        uses: docker/build-push-action@v5.0.0
        with:
          context: .
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
          build-args: |
            CLOUDSMITH_REPO_NAME=${{ env.CLOUDSMITH_REPO_NAME }}
            CLOUDSMITH_SERVICE=${{ env.CLOUDSMITH_SERVICE }}
            CLOUDSMITH_API_KEY=${{ env.CLOUDSMITH_API_KEY }}
            CLOUDSMITH_NAMESPACE=${{ env.CLOUDSMITH_NAMESPACE }}
            
      - name: Get Image digest
        id: get-digest
        run: |
          echo "IMAGE_DIGEST=$(docker inspect --format='{{index .Id}}' ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest)" >> $GITHUB_ENV

      - name: Get Image Status
        id: get-slug
        run: | 
          echo "IMAGE_STATUS=$(curl -s -G \
                --url 'https://api.cloudsmith.io/v1/packages/${{env.CLOUDSMITH_NAMESPACE}}/${{env.CLOUDSMITH_REPO_NAME}}/' \
                --data-urlencode "query=docker_image_digest:${{env.IMAGE_DIGEST}}" \
                --header "X-Api-Key: ${{env.CLOUDSMITH_API_KEY}}" \
                --header 'accept: application/json' | jq '.[].status_str')" >> $GITHUB_ENV

      - name: Check Image status 
        id: check-status
        run: | 
          echo "Image Digest is ${{ env.IMAGE_DIGEST }}"
          echo "Image status is ${{ env.IMAGE_STATUS }}"